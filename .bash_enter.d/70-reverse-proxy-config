#!/usr/bin/env bash

SHOULD_RESTART_NGINX_PROXY=0

PROJECT_NGINX_PROXY_PATH="$DOCKER_DEVBOX_DIR/.nginx-proxy"
PROJECT_TRAEFIK_PATH="$DOCKER_DEVBOX_DIR/.traefik"

for DOMAIN in $(dc config | sed -n -e 's/\s*VIRTUAL_HOST: //p'); do
  if [[ -n "${DOCKER_DEVBOX_REVERSE_PROXY}" && "${DOCKER_DEVBOX_REVERSE_PROXY}" == "nginx-proxy" ]]; then
    for VHOST_CONF in "$PROJECT_NGINX_PROXY_PATH"/*; do
      # shellcheck disable=SC2001
      VHOST_CONF_DEST_BASENAME=$(basename "$(echo "$VHOST_CONF" | sed -e 's/\[domain\]/'"${DOCKER_DEVBOX_DOMAIN_PREFIX}.${DOCKER_DEVBOX_DOMAIN}"'/g')")

      if [[ "$DOMAIN" == "$VHOST_CONF_DEST_BASENAME" ]]; then
        if _cp_file_if_different "$VHOST_CONF" "$DOCKER_DEVBOX_NGINX_PROXY_PATH/vhost.d/$VHOST_CONF_DEST_BASENAME"; then
          SHOULD_RESTART_NGINX_PROXY=1
        fi
      fi

      if [[ "$DOMAIN""_location" == "$VHOST_CONF_DEST_BASENAME" ]]; then
        if _cp_file_if_different "$VHOST_CONF" "$DOCKER_DEVBOX_NGINX_PROXY_PATH/vhost.d/$VHOST_CONF_DEST_BASENAME"; then
          SHOULD_RESTART_NGINX_PROXY=1
        fi
      fi
    done
  fi

  if [[ -n "${DOCKER_DEVBOX_REVERSE_PROXY}" && "${DOCKER_DEVBOX_REVERSE_PROXY}" == "traefik" ]]; then
    if [ ! -f "$PROJECT_TRAEFIK_PATH/[domain].ssl.toml" ]; then
      mkdir -p "$PROJECT_TRAEFIK_PATH"
      cat <<EOF > "$PROJECT_TRAEFIK_PATH/[domain].ssl.toml"
# This configuration file has been automatically generated by docker-devbox
[[tls]]
  entryPoints = ["https"]
  [tls.certificate]
    certFile = "/certs/${DOMAIN}.crt"
    keyFile = "/certs/${DOMAIN}.key"
EOF
    fi
  for TRAEFIK_FILE in "$PROJECT_TRAEFIK_PATH"/*; do
    # shellcheck disable=SC2001
    TRAEFIK_FILE_DEST_BASENAME=$(basename "$(echo "$TRAEFIK_FILE" | sed -e 's/\[domain\]/'"${DOCKER_DEVBOX_DOMAIN_PREFIX}.${DOCKER_DEVBOX_DOMAIN}"'/g')")

    _cp_file_if_different "$TRAEFIK_FILE" "$DOCKER_DEVBOX_TRAEFIK_PATH/config/$TRAEFIK_FILE_DEST_BASENAME"
  done
  fi
done

if [[ -n "${DOCKER_DEVBOX_REVERSE_PROXY}" && "${DOCKER_DEVBOX_REVERSE_PROXY}" == "nginx-proxy" ]]; then
  if [ "$SHOULD_RESTART_NGINX_PROXY" -eq "1" ]; then
    echo "$(tput setaf 3)nginx-proxy configuration has been applied. Restarting nginx-proxy container ...$(tput sgr0)"
    docker restart nginx-proxy
    echo "$(tput setaf 2)nginx-proxy container has been restarted."
  fi
fi
